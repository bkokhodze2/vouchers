import Head from 'next/head';
// @ts-ignore
import {ICONS, IMAGES} from "public/images";
// @ts-ignore
import Cards from "/public/images/icons/nav/navCards";
// @ts-ignore
import Points from "/public/images/icons/nav/navPoints";
// @ts-ignore
import Tickets from "/public/images/icons/nav/navTickets";
import React, {useEffect, useState} from "react";
import Layout from "../../components/admin/layouts/admin-layout";
import {Form, Input, Radio} from "antd";
import {useRouter} from "next/router";
import axios from "axios";
import OrderItem from "../../components/admin/blocks/order-item";
import _ from "lodash";

export default function Admin() {
  const baseApi = process.env.baseApi;
  const [searchForm] = Form.useForm();
  const [orders, setOrders] = useState<any>([]);
  const [val, setVal] = useState<any>({});
  const [refresh, setRefresh] = useState<boolean>(false);

  const Router = useRouter();

  const getData = (data = null) => {

    setOrders(null)
    // @ts-ignore
    if (data?.status === 'all') {
      axios.get(`${baseApi}/providers/get-own-vouchers`).then((res) => {
        setOrders(res.data)
      }).catch(() => {
        console.log("catch")
      })
      // @ts-ignore
    } else if (data?.status === 'active') {
      axios.get(`${baseApi}/providers/get-ordered-vouchers?isValid=false`).then((res) => {
        setOrders(res.data)
      }).catch(() => {
        console.log("catch")
      })
    }

  }

  useEffect(() => {
    getData()
    onChange()
  }, [])

  const resetFields = () => {
    searchForm.resetFields();
  }

  const onFinish = (values: any) => {
    console.log(values)
    resetFields();
  };

  const onChange = () => {
    let data = searchForm.getFieldsValue();
    setVal(data);
    getData(data)

  }

  return (
      <div>
        <Head>
          <title>pirveli.com</title>
          <meta name="description" content="Generated by create next app"/>
          <link rel="icon" href="/public/favicon.ico"/>
        </Head>

        <div
            className={"w-full flex xl:gap-[30px] gap-4 md:pt-[32px] pt-3 container m-auto h-full min-h-[calc(100vh-144px)]"}>
          <div
              className={"md:flex hidden flex-col bg-[white] h-min rounded-xl min-w-[360px]  pt-[20px] pb-[30px] px-6"}>
            <Form
                form={searchForm}
                name="basic"
                className={"search"}
                onChange={onChange}
                onFinish={onFinish}
                initialValues={{
                  search: "",
                  status: 'all'
                }}
            >
              <div className={"w-full relative"}>
                <Form.Item
                    className={"w-full"}
                    name="search"
                >
                  <Input className={"h-[48px] pl-[24px] pr-[52px] bg-[#D9D9D94D] border-none rounded-[12px]"}
                         placeholder={"მიუთითე შეკვეთის ID"}>

                  </Input>
                </Form.Item>
                <svg className={"flex absolute right-[27px] top-[15px]"} width="20" height="20" viewBox="0 0 20 20"
                     fill="none"
                     xmlns="http://www.w3.org/2000/svg">
                  <path
                      d="M19 19L14.3448 14.3448L19 19ZM1 8.75862C1 4.47365 4.47365 1 8.75862 1C13.0436 1 16.5172 4.47365 16.5172 8.75862C16.5172 13.0436 13.0436 16.5172 8.75862 16.5172C4.47365 16.5172 1 13.0436 1 8.75862Z"
                      stroke="#383838" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
                </svg>

              </div>
              <div className={"w-full mt-6"}>
                <h3 className={"text-gray mb-4"}>შეკვეთის სტატუსი</h3>
                <div>
                  <Form.Item name="status">
                    <Radio.Group className={"flex flex-col space-y-[20px]"} size={"large"}>
                      <div className={"flex justify-between"}>
                        <Radio value={'all'} className={"text-gray l"} type="primary">
                          <p className={"text-[14px]"}
                             style={{
                               color: val?.status === 'all' ? "#8338EC" : "#383838",
                               transition: "0.3s linear all"
                             }}
                          >ვაუჩერები</p>
                        </Radio>
                        {/*<div className={"bg-purple px-[12px] flex items-center rounded-[100px] h-[25px]"}*/}
                        {/*     style={{*/}
                        {/*       backgroundColor: val?.status === 'all' ? "#8338EC" : "#EDEEEF",*/}
                        {/*       transition: "0.3s linear all"*/}
                        {/*     }}*/}
                        {/*>*/}
                        {/*  <p className={"text-[white] text-[12px]"}*/}
                        {/*     style={{*/}
                        {/*       color: val?.status === 'all' ? "#FFFFFF" : "#383838",*/}
                        {/*       transition: "0.3s linear all"*/}
                        {/*     }}*/}
                        {/*  >234</p>*/}
                        {/*</div>*/}
                      </div>
                      <div className={"flex justify-between"}>
                        <Radio value={"active"} className={"text-gray"}>
                          <p className={"text-[14px]"}
                             style={{
                               color: val?.status === 'active' ? "#8338EC" : "#383838",
                               transition: "0.3s linear all"
                             }}
                          >აქტიური</p>
                        </Radio>

                        {/*<div className={"bg-purple px-[12px] flex items-center rounded-[100px] h-[25px]"}*/}
                        {/*     style={{*/}
                        {/*       backgroundColor: val?.status === 'active' ? "#8338EC" : "#EDEEEF",*/}
                        {/*       transition: "0.3s linear all"*/}
                        {/*     }}*/}
                        {/*>*/}
                        {/*  <p className={"text-[white] text-[12px]"}*/}
                        {/*     style={{*/}
                        {/*       color: val?.status === 'active' ? "#FFFFFF" : "#383838",*/}
                        {/*       transition: "0.3s linear all"*/}
                        {/*     }}*/}
                        {/*  >23</p>*/}
                        {/*</div>*/}
                      </div>
                      {/*<div className={"flex justify-between"}>*/}
                      {/*  <Radio value={"used"} className={"text-gray"}>*/}
                      {/*    <p className={"text-[14px]"}>გამოყენებული</p>*/}
                      {/*  </Radio>*/}
                      {/*  <div className={"bg-purple px-[12px] flex items-center rounded-[100px] h-[25px]"}>*/}
                      {/*    <p className={"text-[white] text-[12px]"}>123</p>*/}
                      {/*  </div>*/}
                      {/*</div>*/}
                      {/*<div className={"flex justify-between"}>*/}
                      {/*  <Radio value={"Expired"} className={"text-gray"}>*/}
                      {/*    <p className={"text-[14px]"}>ვადაგასული</p>*/}
                      {/*  </Radio>*/}
                      {/*  <div className={"bg-purple px-[12px] flex items-center rounded-[100px] h-[25px]"}>*/}
                      {/*    <p className={"text-[white] text-[12px]"}>123</p>*/}
                      {/*  </div>*/}
                      {/*</div>*/}
                    </Radio.Group>
                  </Form.Item>
                </div>
              </div>


            </Form>
          </div>
          <div className={"w-full"}>
            <h2 className={"text-[32px] text-[#383838] font-bold"}>ვაუჩერები</h2>
            <div className={"space-y-[20px] h-[2000px] mt-[20px]"}>
              {
                  Array.isArray(orders) && _.get(orders, '[0]', 0) !== null && orders?.map((e: any, index) => {
                    // [1, 2, 3, 4].map((e: any, index) => {
                    return <OrderItem setRefresh={setRefresh} btn={val.status === 'active'} data={e} key={index}
                                      evaluated={index % 2 == 0}/>
                  })
              }
            </div>
          </div>
        </div>
      </div>
  )
}

Admin.getLayout = function getLayout(page: any) {
  return (
      <Layout>
        {page}
      </Layout>
  )
}